###############################################################################
#                          常用Linux命令集合                                  #
###############################################################################

1. lsb_release -a
... ...
No LSB modules are available.
Distributor ID: Ubuntu
Description:    Ubuntu 16.04.5 LTS
Release:    16.04
Codename:   xenial
... ...

2.find . -path "./nginx" -prune -o -print

###########################################
if -path "./nginx"
	-prune
else
	-print
endif
###########################################

3.watch
... ...
watch可以帮你监测一个命令的运行结果，来监测你想要的一切命令的结果变化

watch -n 1 -d netstat -ant 【-n 设置间隔，-d,difference，高亮显示不同】

watch -d 'ls /home/omd'       【-d 高亮显示】

watch -t 'ls /home/omd'       【-t会关闭watch命令在顶部的时间间隔】

说明：
切换终端： Ctrl+x
退出watch：Ctrl+g
... ...

4.awk
... ...
a.命令行方式
awk [-F  field-separator]  'commands'  input-file(s)
其中，commands 是真正awk命令，[-F域分隔符]是可选的。 input-file(s) 是待处理的文件。
在awk中，文件的每一行中，由域分隔符分开的每一项称为一个域。通常，在不指名-F域分隔符的情况下，默认的域分隔符是空格。

b.shell脚本方式
将所有的awk命令插入一个文件，并使awk程序可执行，然后awk命令解释器作为脚本的首行，一遍通过键入脚本名称来调用。
相当于shell脚本首行的：#!/bin/sh
可以换成：#!/bin/awk

c.将所有的awk命令插入一个单独文件，然后调用：
awk -f awk-script-file input-file(s)
其中，-f选项加载awk-script-file中的awk脚本，input-file(s)跟上面的是一样的。

ARGC               命令行参数个数
ARGV               命令行参数排列
ENVIRON            支持队列中系统环境变量的使用
FILENAME           awk浏览的文件名
FNR                浏览文件的记录数
FS                 设置输入域分隔符，等价于命令行 -F选项
NF                 浏览记录的域的个数
NR                 已读的记录数
OFS                输出域分隔符
ORS                输出记录分隔符
RS                 控制记录分隔符

example:
$awk -F ":" 'BEGIN{l=0}/cpu MHz/{l++;printf "%-16s\t",$2};/processor/{printf "%-4s: ",$2};l==8{l=0;printf "\n",l}' /proc/cpuinfo
... ...

5.sed
... ...
Sed
sed是一个很好的文件处理工具，本身是一个管道命令，主要是以行为单位进行处理，可以将数据行进行替换、删除、新增、选取等特定工作，下面先了解一下sed的用法

sed命令行格式为：
sed [-nefri] ‘command’ 输入文本

常用选项：
-n∶使用安静(silent)模式。在一般 sed 的用法中，所有来自 STDIN的资料一般都会被列出到萤幕上。但如果加上 -n 参数后，则只有经过sed 特殊处理的那一行(或者动作)才会被列出来。
-e∶直接在指令列模式上进行 sed 的动作编辑；
-f∶直接将 sed 的动作写在一个档案内， -f filename 则可以执行 filename 内的sed 动作；
-r∶sed 的动作支援的是延伸型正规表示法的语法。(预设是基础正规表示法语法)
-i∶直接修改读取的档案内容，而不是由萤幕输出。

常用命令：
a∶新增， a 的后面可以接字串，而这些字串会在新的一行出现(目前的下一行)
c∶取代， c 的后面可以接字串，这些字串可以取代 n1,n2 之间的行！
d∶删除，因为是删除啊，所以 d 后面通常不接任何咚咚；
i∶插入， i 的后面可以接字串，而这些字串会在新的一行出现(目前的上一行)；
p∶列印，亦即将某个选择的资料印出。通常 p 会与参数 sed -n 一起运作
s∶取代，可以直接进行取代的工作哩！通常这个 s 的动作可以搭配正规表示法！例如 1,20s/old/new/g 就是啦！
... ...

6.组合使用
watch -n 1 awk '/processor\|cpu\ MHz/\{print\ $n\ $1\}' /proc/cpuinfo

7.sort
sort按照列排序, -k指定列, -t指定分隔符
$sort -n -t ' ' -k 1
$ls -l | sort -n -t " " -k 5

8.dig
dig查询DNS信息
$dig www.baidu.com
... ...
; <<>> DiG 9.10.3-P4-Ubuntu <<>> www.baidu.com
;; global options: +cmd
;; Got answer:
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 54503
;; flags: qr rd ra; QUERY: 1, ANSWER: 3, AUTHORITY: 0, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4000
;; QUESTION SECTION:
;www.baidu.com.			IN	A

;; ANSWER SECTION:
www.baidu.com.		312	IN	CNAME	www.a.shifen.com.
www.a.shifen.com.	388	IN	A	180.101.49.12
www.a.shifen.com.	388	IN	A	180.101.49.11

;; Query time: 5 msec
;; SERVER: 127.0.1.1#53(127.0.1.1)
;; WHEN: Thu May 06 11:03:27 +08 2021
;; MSG SIZE  rcvd: 101
... ...

9.nohub

nohup 英文全称 no hang up（不挂起），用于在系统后台不挂断地运行命令，
退出终端不会影响程序的运行。nohup 命令，在默认情况下（非重定向时），
会输出一个名叫 nohup.out 的文件到当前目录下，如果当前目录的 nohup.out
文件不可写，输出重定向到$HOME/nohup.out 文件中。

$nohup /test.sh &>/dev/null &

10.开机关闭swap
#vim /etc/fstab
... ...
#/dev/mapper/centos00-swap swap                    swap    defaults        0 0
... ...

11.源码树编译module
$cd target_dir
$make CONFIG_CRYPTO_DEV_SP_CCP=m -C /home/higon/hygonProject/kcapi/kernel-4.19  M=`pwd`  modules

12.复制/粘贴
copy	：Ctrl + Shift + C
paste	：Ctrl + Shift + V

13.注释shell
$vim ./test.sh
... ...
:<<'COMMENTBLOCK'
echo "This line will not echo." # commented-out code block
COMMENTBLOCK
... ...
备注：其中COMMENTBLOC中间部分属于注释部分

14.sftp常用命令
$sftp user@ip   #登录

$pwd            #pwd是看远端服务器的目录， 即sftp服务器默认的当前目录.

$pwdl           #lpwd是看linux本地目录.

$ls             #ls是看sftp服务器下当前目录下的东东.

$lls            #lls是看linux当前目录下的东东.

$put a.txt      #这个是把linux当前目录下的a.txt文件上传到sftp服务器的当前目录下

$get b.txt      #这个是把sftp服务器当前目录下的b.txt文件下载到linux当前目录下.

